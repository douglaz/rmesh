name: Rust

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v5
      with:
        submodules: recursive
    
    - name: Install Nix
      uses: cachix/install-nix-action@v31
      with:
        nix_path: nixpkgs=channel:nixos-unstable
        extra_nix_config: |
          experimental-features = nix-command flakes
    
    # Only cache cargo registry (dependencies), not target directory
    # Target caching conflicts with nix environment and multiple build targets
    - name: Cache Cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
        key: cargo-registry-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          cargo-registry-${{ runner.os }}-
    
    - name: Check formatting
      run: nix develop -c cargo fmt --check
    
    - name: Run linting
      run: nix develop -c cargo clippy --all-targets -- -D warnings
    
    - name: Build workspace
      run: nix develop -c cargo build --workspace
    
    - name: Run tests
      run: nix develop -c cargo test --workspace
    
    - name: Build with nix (static musl binary)
      run: nix build
    
    - name: Check binary is static
      run: |
        file result/bin/rmesh | grep "statically linked"

  test-features:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v5
      with:
        submodules: recursive
    
    - name: Install Nix
      uses: cachix/install-nix-action@v31
      with:
        nix_path: nixpkgs=channel:nixos-unstable
        extra_nix_config: |
          experimental-features = nix-command flakes
    
    - name: Cache Cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
        key: cargo-registry-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          cargo-registry-${{ runner.os }}-
    
    - name: Test core library separately
      run: |
        nix develop -c cargo test -p rmesh-core
    
    - name: Test CLI separately
      run: |
        nix develop -c cargo test -p rmesh
    
    - name: Build release version
      run: |
        nix develop -c cargo build --release --workspace